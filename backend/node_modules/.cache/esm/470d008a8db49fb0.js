let Koa,mongoose,Router,bodyParser,api,jwtMiddleware,serve,path;_8db‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_8db‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_8db‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_8db‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_8db‍.w("./api",[["default",["api"],function(v){api=v}]]);_8db‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);_8db‍.w("koa-static",[["default",["serve"],function(v){serve=v}]]);_8db‍.w("path",[["default",["path"],function(v){path=v}]]);








const port = 4000;
const app = new Koa();
const router = new Router();


router.use('/api', api.routes());

app.use(htmlRender());
app.use(bodyParser());
app.use(jwtMiddleware);
app.use(router.routes()).use(router.allowedMethods());

app.use(serve(path.join(__dirname, '../../frontend/public/files')));
app.use(serve(path.join(__dirname, '../../frontend/public/profile')));

//MongoDB 연결
mongoose
.connect('mongodb://localhost:27017/hjstagram',{useNewUrlParser: true})
.then(()=>{
    console.log('Connected to MongoDB');
})
.catch(e=>{
    _8db‍.g.console.error(e);
});

app.listen(port, () => {
    console.log(`${port}로 서버 실행중 ...`);
});